variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_VIRTUALENVS_PATH: "$CI_PROJECT_DIR/.cache/venv"

default:
  tags:
    - docker

  image:
    name: python:3.8

  before_script:
    - echo -e "machine gitlab.ccsteam.ru\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > ~/.netrc
    - pip install poetry
    - poetry install

stages:
  - check
  - build

lint:
  stage: check
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .cache
  script:
    - poetry run ./scripts/lint

test:
  stage: check
  services:
    - postgres:11.4-alpine
    - redis:6-alpine
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .cache
  script:
    - poetry run ./scripts/test
  variables:
    POSTGRES_DSN: postgres://postgres:postgres@postgres/postgres
    REDIS_DSN: redis://redis/0
    TEST_POSTGRES_DSN: ${POSTGRES_DSN}
    TEST_REDIS_DSN: ${REDIS_DSN}
  coverage: '/Total coverage: \d\d\d.\d\d%/'

build:
  stage: build
  script:
    - poetry build
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry config http-basic.gitlab gitlab-ci-token ${CI_JOB_TOKEN}
    - poetry publish -r gitlab
  only:
    - tags
